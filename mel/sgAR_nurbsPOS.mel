global proc string sgAR_nurbsPOS (){

string $temp[] = `ls -sl`;
	string $obj = $temp[0];
$temp = `listRelatives -shapes $temp[0]`;
string $surface = $temp[0];
string $name = "POS#";
	
$temp = `spaceLocator -n $name`;
string $loc = $temp[0];
	addAttr -at "double" -ln "U" -min -10 -max 10 $loc;
		setAttr -keyable 1 ($loc + ".U");
	addAttr -at "double" -ln "V" -min -10 -max 10 $loc;
		setAttr -keyable 1 ($loc + ".V");
	addAttr -at "double" -ln "defaultU" -min -10 -max 10 $loc;
		setAttr -keyable 0 -channelBox 1 ($loc + ".defaultU") 0;
	addAttr -at "double" -ln "defaultV" -min -10 -max 10 $loc;
		setAttr -keyable 0 -channelBox 1 ($loc + ".defaultV") 0;
	addAttr -at "bool" -ln "reverseU" $loc;
		setAttr -keyable 0 -channelBox 1 ($loc + ".reverseU") 0;
	addAttr -at "bool" -ln "reverseV" $loc;
		setAttr -keyable 0 -channelBox 1 ($loc + ".reverseV") 0;
	setAttr -keyable 0 -channelBox 1 ($loc + ".visibility") 1;
	
	
select -r $surface;
string $pos = `pointOnSurface -ch 1`;
	$pos = `rename $pos ($loc + "_INFO")`;

string $mult = `shadingNode -asUtility "multiplyDivide" -n ($loc + "_MULT_A")`;
	connectAttr -f ($loc + ".U") ($mult + ".input1X");
	connectAttr -f ($loc + ".V") ($mult + ".input1Y");

string $mult2 = `shadingNode -asUtility "multiplyDivide" -n ($loc + "_MULT_B")`;
	connectAttr -f ($loc + ".defaultU") ($mult2 + ".input1X");
	connectAttr -f ($loc + ".defaultV") ($mult2 + ".input1Y");

string $blend1 = `shadingNode -asUtility blendColors -n ($loc + "_BLEND_A")`;
	setAttr -lock true ($blend1 + ".color1R") -0.04999;
	setAttr -lock true ($blend1 + ".color2R") 0.04999;
	connectAttr -f ($loc + ".reverseU") ($blend1 + ".blender");
	connectAttr -f ($blend1 + ".outputR") ($mult + ".input2X");
	connectAttr -f ($blend1 + ".outputR") ($mult2 + ".input2X");
	
string $blend2 = `shadingNode -asUtility blendColors -n ($loc + "_BLEND_B")`;
	setAttr -lock true ($blend2 + ".color1R") -0.04999;
	setAttr -lock true ($blend2 + ".color2R") 0.04999;
	connectAttr -f ($loc + ".reverseV") ($blend2 + ".blender");
	connectAttr -f ($blend2 + ".outputR") ($mult + ".input2Y");
	connectAttr -f ($blend2 + ".outputR") ($mult2 + ".input2Y");
	
string $pma = `shadingNode -asUtility "plusMinusAverage" -n ($loc + "_PMA_A")`;
	connectAttr -f ($mult + ".outputX") ($pma + ".input2D[0].input2Dx");
	connectAttr -f ($mult + ".outputY") ($pma + ".input2D[0].input2Dy");
	connectAttr -f ($pma + ".output2Dx") ($pos + ".parameterU");
	connectAttr -f ($pma + ".output2Dy") ($pos + ".parameterV");
	connectAttr -f ($pos + ".result.position") ($loc + ".translate");

string $clamp = `shadingNode -asUtility "clamp" -n ($loc + "_CLAMP")`;
	setAttr -lock true ($clamp + ".minR") 0;
	setAttr -lock true ($clamp + ".minG") 0;
	setAttr -lock true ($clamp + ".maxR") 1;
	setAttr -lock true ($clamp + ".maxG") 1;
	connectAttr -f ($pma + ".output2Dx") ($clamp + ".inputR");
	connectAttr -f ($pma + ".output2Dy") ($clamp + ".inputG");
	connectAttr -f ($clamp + ".outputR") ($pos + ".parameterU");
	connectAttr -f ($clamp + ".outputG") ($pos + ".parameterV");
	
string $pma2 = `shadingNode -asUtility "plusMinusAverage" -n ($loc + "_PMA_B")`;
	setAttr ($pma2 + ".input2D[1].input2Dx") 0.5;
	setAttr ($pma2 + ".input2D[1].input2Dy") 0.5;
	connectAttr -f ($mult2 + ".outputX") ($pma2 + ".input2D[0].input2Dx");
	connectAttr -f ($mult2 + ".outputY") ($pma2 + ".input2D[0].input2Dy");
	connectAttr -f ($pma2 + ".output2Dx") ($pma + ".input2D[1].input2Dx");
	connectAttr -f ($pma2 + ".output2Dy") ($pma + ".input2D[1].input2Dy");

string $const = `createNode aimConstraint -p $loc -n ($loc + "_aimConstraint")`;
	connectAttr -f ($pos + ".normal") ($const + ".target[0].targetTranslate");
	connectAttr -f ($pos + ".tangentV") ($const + ".worldUpVector");
	connectAttr -f ($const + ".constraintRotate") ($loc + ".rotate");

setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".tx");
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".ty");
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".tz");
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".rx");
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".ry");
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".rz");
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".sx") 1;
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".sy") 1;
setAttr -lock 1 -keyable 0 -cb 0 ($loc + ".sz") 1;

select -r $obj;

return $loc;

}

sgAR_nurbsPOS